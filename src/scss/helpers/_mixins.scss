// width
@mixin r($width) {
    @media only screen and (max-width: $width) {
        @content;
    }
}

@mixin rmin($width) {
    @media only screen and (min-width: $width) {
        @content;
    }
}

// height
@mixin rh($height) {
    @media only screen and (max-height: $height) {
        @content;
    }
}

@mixin rhmin($height) {
    @media only screen and (min-height: $height) {
        @content;
    }
}

@mixin cover {
    background-repeat: no-repeat;
    background-size: cover;
    background-position: 50% 50%;
}

// vertical-align at center
@mixin vcenter {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

@mixin center {
    position: absolute;
    transform: translate(-50%, -50%);
}

// font-family
@mixin font($alias, $name) {
    @font-face {
        font-family: $alias;
        src: url("../fonts/"+$name+".woff2") format("woff2"),
            url("../fonts/"+$name+".woff") format("woff");
        font-weight: normal;
        font-style: normal;
        font-display: swap;
    }
}

// btn
@mixin btn {
    padding: 2rem 3rem;
    display: inline-block;
    @content;
}

//mixins definition
@mixin grid {
    @supports (grid-area: auto) {
        display: grid;
        grid-column-gap: $gap-horizontal;
        grid-row-gap: $gap-vertical;
    }
}

// gridLayout
@mixin gridLayout($cols...) {
    display: grid;

    @supports (grid-area: auto) {
        grid-template-columns: repeat($grid-columns, 1fr);

        $i: 1;

        @each $col in $cols {
            > :nth-of-type(#{$i}) {
                grid-column-end: span nth($col, 1);

                @if length($col) >1 {
                    grid-row-end: span nth($col, 2);
                }
            }

            $i: $i + 1;
        }
    }
}

// gridAdvanced
@mixin gridAdvanced($cols...) {
    @supports (grid-area: auto) {
        grid-template-columns: repeat($grid-columns, 1fr);

        $i: 1;

        @each $col in $cols {
            > :nth-of-type(#{$i}) {
                grid-column-start: nth($col, 1);
                grid-column-end: nth($col, 2);
                grid-row-start: nth($col, 3);
                grid-row-end: nth($col, 4);
            }

            $i: $i + 1;
        }
    }
}

// not
@mixin not-r($nam) {
    &:not(:last-child) {
        margin-right: $nam;
    }
}

// not
@mixin not-l($nam) {
    &:not(:last-child) {
        margin-left: $nam;
    }
}
